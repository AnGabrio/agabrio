<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Expectation Maximisation Algorithm on Andrea Gabrio</title>
    <link>/tags/expectation-maximisation-algorithm/</link>
    <description>Recent content in Expectation Maximisation Algorithm on Andrea Gabrio</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/tags/expectation-maximisation-algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Expectation Maximisation Algorithm</title>
      <link>/missmethods/em-algorithm/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/missmethods/em-algorithm/</guid>
      <description>


&lt;p&gt;Patterns of incomplete data in practice often do not have the forms that allow explicit &lt;em&gt;Maximum Likelihood&lt;/em&gt;(ML) estimates to be calculated. Suppose we have a model for the complete data &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;, with density &lt;span class=&#34;math inline&#34;&gt;\(f(Y\mid \theta)\)&lt;/span&gt;, indexed by the set of unknown parameters &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;. Writing &lt;span class=&#34;math inline&#34;&gt;\(Y=(Y_0,Y_1)\)&lt;/span&gt; in terms of the observed &lt;span class=&#34;math inline&#34;&gt;\(Y_0\)&lt;/span&gt; and missing &lt;span class=&#34;math inline&#34;&gt;\(Y_1\)&lt;/span&gt; components, and assuming that the missingness mechanism is &lt;em&gt;Missing At Random&lt;/em&gt;(MAR), we want to maximise the likelihood&lt;/p&gt;
&lt;p&gt;\[
L\left(\theta \mid Y_0 \right) = \int f\left(Y_0, Y_1 \mid \theta \right)dY_1
\]&lt;/p&gt;
&lt;p&gt;with respect to &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;. When the likelihood is differentiable and unimodal, ML estimates can be found by solving the likelihood equation&lt;/p&gt;
&lt;p&gt;\[
D_l\left(\theta \mid Y_0 \right) \equiv \frac{\partial ln L\left(\theta \mid Y_0 \right)}{\partial \theta} = 0,
\]&lt;/p&gt;
&lt;p&gt;while, if a closed-form solution cannot be found, iterative methods can be applied. One of these methods is the popular &lt;em&gt;Expectation Maximisation&lt;/em&gt;(EM) algorithm (&lt;span class=&#34;citation&#34;&gt;Dempster, Laird, and Rubin (1977)&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The EM algorithm is a general iterative method for ML estimation in incomplete data problems. The basic idea behind it is based on a sequence of steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Replace missing values by estimated values&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Estimate the parameters&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Re-estimate the missing values assuming the new parameter estimates are correct&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Re-estimate parameters&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The procedure is then iterated until apparent convergence. Each iteration of EM consists of an &lt;em&gt;expectation step&lt;/em&gt; (E step) and a &lt;em&gt;maximisation step&lt;/em&gt; (M step) which ensure that, under general conditions, each iteration increases the loglikelihood &lt;span class=&#34;math inline&#34;&gt;\(l(\theta \mid Y_0)\)&lt;/span&gt;. In addition, if the loglikelihood is bounded, the sequence &lt;span class=&#34;math inline&#34;&gt;\(\{l(\theta_t \mid Y_0), t=(0,1,\ldots)\}\)&lt;/span&gt; converges to a stationary value of &lt;span class=&#34;math inline&#34;&gt;\(l(\theta \mid Y_0)\)&lt;/span&gt;.&lt;/p&gt;
&lt;div id=&#34;the-e-step-and-the-m-step&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The E step and the M step&lt;/h2&gt;
&lt;p&gt;The M step simply consists of performing ML estimation of &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; as if there were no missing data, that is, after they had been filled in. The E step finds the conditional expectation of the missing values given the observed data and current estimated parameters. In practice, EM does not necessarily substitute the missing values themselves but its key idea is that they are generally not &lt;span class=&#34;math inline&#34;&gt;\(Y_0\)&lt;/span&gt; but the functions of &lt;span class=&#34;math inline&#34;&gt;\(Y_0\)&lt;/span&gt; appearing in the complete data loglikelihood &lt;span class=&#34;math inline&#34;&gt;\(l(\theta \mid Y)\)&lt;/span&gt;. Specifically, let &lt;span class=&#34;math inline&#34;&gt;\(\theta_t\)&lt;/span&gt; be the current estimate of &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;, then the E step finds the expected complete data loglikelihood if &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; were &lt;span class=&#34;math inline&#34;&gt;\(\theta_t\)&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;\[
Q\left(\theta \mid \theta_t \right) = \int l\left(\theta \mid Y \right)f\left(Y_0 \mid Y_1 , \theta = \theta_t \right)dY_0.
\]&lt;/p&gt;
&lt;p&gt;The M step determines &lt;span class=&#34;math inline&#34;&gt;\(\theta_{t+1}\)&lt;/span&gt; by maximising this expected complete data loglikelihood:&lt;/p&gt;
&lt;p&gt;\[
Q\left(\theta_{t+1} \mid \theta_t \right) \geq Q\left(\theta \mid \theta_t \right),
\]&lt;/p&gt;
&lt;p&gt;for all &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;.&lt;/p&gt;
&lt;div id=&#34;univariate-normal-data-example&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Univariate Normal Data Example&lt;/h3&gt;
&lt;p&gt;Suppose &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; form a an iid sample from a Normal distribution with population mean &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; and variance &lt;span class=&#34;math inline&#34;&gt;\(\sigma^2\)&lt;/span&gt;, for &lt;span class=&#34;math inline&#34;&gt;\(i=1,\ldots,n_{cc}\)&lt;/span&gt; observed units and &lt;span class=&#34;math inline&#34;&gt;\(i=n_{cc}+1,\ldots,n\)&lt;/span&gt; missing units. Under the assumption that the missingness mechanism is ignorable, the expectation of each missing &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; given &lt;span class=&#34;math inline&#34;&gt;\(Y_{obs}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\theta=(\mu,\sigma^2)\)&lt;/span&gt; is &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;. Since the loglikelihood based on all &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; is linear in the sufficient statistics &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i=1}^n y_i\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i=1}^n y^2_i\)&lt;/span&gt;, the E step of the algorithm calculates&lt;/p&gt;
&lt;p&gt;\[
E\left(\sum_{i=1}^{n}y_i \mid \theta_t, Y_0 \right) = \sum_{i=1}^{n_{cc}}y_i + (n-n_{cc})\mu_t
\]&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;\[
E\left(\sum_{i=1}^{n}y^2_i \mid \theta_t, Y_0 \right) = \sum_{i=1}^{n_{cc}}y^2_i + (n-n_{cc})\left(\mu^2_t + \sigma^2_t \right)
\]&lt;/p&gt;
&lt;p&gt;for current estimates &lt;span class=&#34;math inline&#34;&gt;\(\theta_t=(\mu_t,\sigma_t)\)&lt;/span&gt; of the parameters. Note that simply substituting &lt;span class=&#34;math inline&#34;&gt;\(\mu_t\)&lt;/span&gt; for the missing values &lt;span class=&#34;math inline&#34;&gt;\(y_{n_{cc}+1},\ldots,y_n\)&lt;/span&gt; is not correct since the term &lt;span class=&#34;math inline&#34;&gt;\((n-n_{cc})(\sigma_t^2)\)&lt;/span&gt; is omitted. Without missing data, the ML estimate of &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\sigma^2\)&lt;/span&gt; are &lt;span class=&#34;math inline&#34;&gt;\(\frac{\sum_{i=1}^ny_i}{n}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\frac{\sum_{i=1}^ny^2_i}{n}-\left(\frac{\sum_{i=1}^ny_i}{n}\right)^2\)&lt;/span&gt;, respectively. The M step uses the same expressions based on the current expectations of the sufficient statistics calculated in the E step. Thus, the M step calculates&lt;/p&gt;
&lt;p&gt;\[
\mu_{t+1} = \frac{E\left(\sum_{i=1}^n y_i \mid \theta_t, Y_0 \right)}{n}
\]&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;\[
\sigma^2_{t+1} = \frac{E\left(\sum_{i=1}^n y^2_i \mid \theta_t, Y_0 \right)}{n} - \mu^2_{t+1}.
\]&lt;/p&gt;
&lt;p&gt;Setting &lt;span class=&#34;math inline&#34;&gt;\(\mu_t=\mu_{t+1}=\hat{\mu}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\sigma_t=\sigma_{t+1}=\hat{\sigma}\)&lt;/span&gt; in these equations shows that a fixed point of these iterations is &lt;span class=&#34;math inline&#34;&gt;\(\hat{\mu}=\frac{\sum_{i=1}^{n_{cc}}y_i}{n_{cc}}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\hat{\sigma}^2=\frac{\sum_{i=1}^{n_{cc}}y^2_i}{n_{cc}} - \hat{\mu}^2\)&lt;/span&gt;, which are the ML estimates of the parameters from &lt;span class=&#34;math inline&#34;&gt;\(Y_0\)&lt;/span&gt; assuming MAR and distinctness of the parameters.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;extensions-of-em&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extensions of EM&lt;/h2&gt;
&lt;p&gt;There are a variety of applications where the M step does not have a simple computational form. In such cases, one way to avoid an iterative M step is to increase the Q function, rather than maximising it at each iteration, which corresponds to a &lt;em&gt;Generalised Expectation Maximisation&lt;/em&gt;(GEM) algorithm. GEM inceases the likelihood at each iteration but appropriate convergence is not guaranteed without further specification of the process of increasing the Q function. One specific case of GEM is the &lt;em&gt;Expectation Conditional Maximisation&lt;/em&gt;(ECM) algorithm (&lt;span class=&#34;citation&#34;&gt;Meng and Rubin (1993)&lt;/span&gt;), which replaces the M step with a sequence of &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; conditional maximisation (CM) steps, each of which maximises the Q function over &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; but with some vector function of &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;, say &lt;span class=&#34;math inline&#34;&gt;\(g_s(\theta)\)&lt;/span&gt;, fixed at its previous values for &lt;span class=&#34;math inline&#34;&gt;\(s=1,\ldots,S\)&lt;/span&gt;. Very briefly, assume that we have a parameter &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; that can be partitioned into subvectors &lt;span class=&#34;math inline&#34;&gt;\(\theta=(\theta_1,\ldots,\theta_S)\)&lt;/span&gt;, then we can take the &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;-th of the CM steps to be maximisation with respect to &lt;span class=&#34;math inline&#34;&gt;\(\theta_s\)&lt;/span&gt; with all other parameters held fixed. Alternatively, it may be useful to take the &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;-th of the CM steps to be simultaneous maximisation over all of the subvectors expect &lt;span class=&#34;math inline&#34;&gt;\(\theta_s\)&lt;/span&gt;, which is fixed. Because the ECM increases Q, it belongs to the class of GEM algorithms and therefore monotonically increases the likelihood of &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;. When the set of functions &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; is “space filling” in the sense that it allows unconstrained maximisation over &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; in its parameter space, ECM converges to a stationary point under the same conditions ensuring convergence of EM.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Expectation Conditional Maximisation Either&lt;/em&gt;(ECME) algorithm (&lt;span class=&#34;citation&#34;&gt;Liu and Rubin (1994)&lt;/span&gt;) is another version of GEM, which replaces some of the CM steps of ECM, maximising the constrained expected complete data loglikelihood function, with steps that maximise the correspondingly constrained actual likelihood function. The algorithm has stable monotone convergence and basic simplicity implementation relative to competing faster converging methods, and can have faster convergence rate than EM or ECM, measured using either the number of iterations or actual computer time. The The &lt;em&gt;Alternative Expectation Conditional Maximisation&lt;/em&gt;(AECM) algorithm (&lt;span class=&#34;citation&#34;&gt;Meng and Van Dyk (1997)&lt;/span&gt;) builds on the ECME idea by maximising functions other than Q or L in particular CM steps, corresponding to varying definitions of what constitutes missing data. An iteration of AECM consists of cycles, each consisting of an E step with a particular definition of complete and missing data, followed by CM steps, which can result in enhanced computational efficiency.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-dempster1977maximum&#34;&gt;
&lt;p&gt;Dempster, Arthur P, Nan M Laird, and Donald B Rubin. 1977. “Maximum Likelihood from Incomplete Data via the Em Algorithm.” &lt;em&gt;Journal of the Royal Statistical Society: Series B (Methodological)&lt;/em&gt; 39 (1): 1–22.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-liu1994ecme&#34;&gt;
&lt;p&gt;Liu, Chuanhai, and Donald B Rubin. 1994. “The Ecme Algorithm: A Simple Extension of Em and Ecm with Faster Monotone Convergence.” &lt;em&gt;Biometrika&lt;/em&gt; 81 (4): 633–48.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-meng1993maximum&#34;&gt;
&lt;p&gt;Meng, Xiao-Li, and Donald B Rubin. 1993. “Maximum Likelihood Estimation via the Ecm Algorithm: A General Framework.” &lt;em&gt;Biometrika&lt;/em&gt; 80 (2): 267–78.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-meng1997algorithm&#34;&gt;
&lt;p&gt;Meng, Xiao-Li, and David Van Dyk. 1997. “The Em Algorithm—an Old Folk-Song Sung to a Fast New Tune.” &lt;em&gt;Journal of the Royal Statistical Society: Series B (Statistical Methodology)&lt;/em&gt; 59 (3): 511–67.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
